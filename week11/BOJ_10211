
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.PriorityQueue;
import java.util.StringTokenizer;

public class Main {
    static int T;
    private static int N;
    private static int[] arr;
    private static BufferedReader in;
    private static StringBuilder sb = new StringBuilder();
    public static void main(String[] args) {
        getTC();
        while(T-- > 0) {
            getInput();

            solve();
        }
        System.out.println(sb);
    }

    private static void solve() {
        int[] prefixSum = new int[N];
        prefixSum[0] = arr[0];
        for(int i = 1; i<N;i ++){
            prefixSum[i] = arr[i] + prefixSum[i-1];
        }

        PriorityQueue<Integer> pq = new PriorityQueue<>();
        for(int i = 0; i<N; i++){
            for(int j = i; j<N; j++){
                pq.add(-prefixSum[j] + (i-1 >= 0 ? prefixSum[i-1] : 0));
            }
        }

        sb.append(-pq.poll()).append("\n");
    }

    private static void getTC() {
        in = new BufferedReader(new InputStreamReader(System.in));
        try {
            T = Integer.parseInt(in.readLine());
        } catch (IOException e) {
            throw new RuntimeException(e);
        }
    }

    private static void getInput() {
        StringTokenizer st;
        try {
            N = Integer.parseInt(in.readLine());
            st = new StringTokenizer(in.readLine());
        } catch (IOException e) {
            throw new RuntimeException(e);
        }
        arr = new int[N];
        for(int i = 0; i<N; i++)
            arr[i] = Integer.parseInt(st.nextToken());
    }
}
