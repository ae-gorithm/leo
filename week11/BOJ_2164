
import java.util.Scanner;

// 시간 124ms
public class Main {
    static class Node{
        int data;
        Node next;
        Node prev;

        Node(int data){
            this.data = data;
        }
    }
    static class CLinkedList{
        Node head;
        int size;
        CLinkedList(int N){
            head = new Node(1);
            Node cur = head;
            for(int i = 2; i<=N; i++){
                cur.next = new Node(i);
                cur.next.prev = cur;
                cur = cur.next;
            }
            cur.next = head;
            head.prev = cur;

            size= N;
        }

        void print(){
            System.out.println(head.data);
            for(Node cur = head.next; cur != head; cur = cur.next)
                System.out.println(cur.data);
        }

        void rotate(){
            head = head.next;
        }

        void poll(){
            head.prev.next = head.next;
            head.next.prev = head.prev;
            head = head.next;
            size--;
        }
    }
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        CLinkedList list = new CLinkedList(sc.nextInt());
        while(list.size > 1){
            list.poll();
            list.rotate();
        }

        System.out.println(list.head.data);
    }
}


/* 아래는 예전 풀이 입니다. 시간 : 272ms*/

import java.util.*;

public class Main {
	public static void main(String[] args) {
		Deque<Integer> deque = new ArrayDeque<>();
		Scanner sc = new Scanner(System.in);
		
		int N = sc.nextInt();
		for(int i = 1; i<=N;i++)
		deque.add(i);
		
		while(deque.size() != 1) {
			deque.pollFirst();
			deque.addLast(deque.pollFirst());
		}
		
		System.out.println(deque.poll());
	}
}
